{"version":3,"sources":["serviceWorker.js","reducers/testReducer.js","reducers/userReducer.js","actions/user.js","reducers/postReducer.js","actions/post.js","reducers/index.js","components/GoogleBtn.js","api/user.api.js","pages/Login.js","pages/Signup.js","api/post.api.js","components/Navbar.js","components/Post.js","pages/Welcome.js","pages/EmailVerification.js","components/Editor/CustomToolbar.js","components/Editor/ImageBlot.js","components/Editor/VideoBlot.js","components/Editor/FileBlot.js","components/Editor/Editor.js","components/SimpleNavbar.js","pages/CreateNote.js","pages/SinglePost.js","components/HOCs/Auth.js","BloggerApp.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","test","testReducer","state","user","authenticate","token","error","errorMsg","userReducer","action","type","payload","USER_SIGNUP","authentication","posts","postsCount","postReducer","console","log","length","rootReducer","combineReducers","post","GoogleBtn","href","style","color","textDecoration","textAlign","display","flexWrap","flexDirection","backgroundColor","alignItems","padding","marginBottom","src","alt","width","Typography","component","fontSize","textTransform","marginLeft","userLogin","userData","props","dispatch","getState","a","axios","res","data","localStorage","setItem","history","push","response","userSignUp","getUser","getItem","useStyles","makeStyles","root","marginTop","textField","connect","auth","classes","useState","email","password","setUser","handleChange","e","target","value","name","Container","className","TextField","variant","label","fullWidth","onChange","Object","keys","map","v","key","Button","onClick","to","float","createPost","postData","headers","getAllPosts","get","theme","flexGrow","menuButton","marginRight","spacing","title","Navbar","useSelector","AppBar","position","Toolbar","Link","removeItem","maxWidth","minWidth","maxHeight","media","minHeight","postContainer","height","overflow","Post","Card","CardContent","gutterBottom","dangerouslySetInnerHTML","__html","body","CardActions","size","id","actions","useEffect","fetchingPosts","p","_id","createdAt","EmailVerification","CustomToolbar","defaultValue","persist","ImageBlot","node","setAttribute","margin","imageTag","document","createElement","append","getAttribute","Quill","import","blotName","tagName","register","VideoBlot","videoTag","onPlay","FileBlot","innerText","url","cursor","querySelector","FontAttributor","whitelist","QuillEditor","attachQuillRefs","reactQuillRef","getEditor","quillRef","uploadFiles","opt","html","setState","editorHtml","onEditorStateChange","imageHandler","imageRef","current","click","videoHandler","videoRef","fileHandler","fileRef","insertImage","stopPropagation","preventDefault","currentTarget","files","formData","FormData","quill","focus","range","getSelection","index","insertEmbed","setSelection","insertVideo","insertFile","modules","toolbar","container","handlers","formats","React","createRef","this","ref","el","placeholder","accept","Component","path","postActions","editorState","setEditorState","open","setOpen","handleSubmit","writer","setTimeout","SimpleNavbar","borderRadius","onEditorFilesChange","d","Snackbar","autoHideDuration","onClose","event","reason","message","SinglePost","content","setContent","postId","params","split","err","fetchSinglePost","OriginalComponent","userAuth","fetchData","BloggerApp","exact","Login","Signup","Welcome","CreateNote","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.97415fb9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  test: \"test\"\r\n};\r\n\r\nconst testReducer = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\nexport default testReducer;\r\n","import * as actions from \"../actions/user\";\r\n\r\nconst initialState = {\r\n  user: null,\r\n  authenticate: false,\r\n  token: null,\r\n  error: false,\r\n  errorMsg: null,\r\n};\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.USER_LOGIN:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        authenticate: true,\r\n        error: false,\r\n        errorMsg: null,\r\n      };\r\n    case action.USER_SIGNUP:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        authentication: true,\r\n        error: false,\r\n      };\r\n    case actions.USER_ERROR:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        authenticate: false,\r\n        token: null,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default userReducer;\r\n","export const USER_LOGIN = \"USER_LOGIN\";\r\nexport const USER_ERROR = \"UESR_ERROR\";\r\nexport const USER_SIGNUP = \"USER_SIGNUP\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n","import * as actions from \"../actions/post\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  postsCount: 0,\r\n  error: null\r\n};\r\n\r\nconst postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actions.CREATE_POST:\r\n      console.log(actions.CREATE_POST, action.payload)\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, action.payload],\r\n        postsCount: state.posts.length + 1\r\n      }\r\n    case actions.GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload],\r\n        postsCount: action.payload.length,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n","export const GET_POSTS = \"GET_POSTS\";\r\nexport const CREATE_POST = \"CREATE_POST\";","import { combineReducers } from \"redux\";\r\n\r\nimport testReducer from \"./testReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  test: testReducer,\r\n  user: userReducer,\r\n  post: postReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction GoogleBtn() {\r\n  return (\r\n    <a\r\n      href=\"http://localhost:3001/api/user/auth/google\"\r\n      style={{ color: \"white\", textDecoration: \"none\", textAlign: \"center\" }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          flexDirection: \"row\",\r\n          backgroundColor: \"#3EA0EB\",\r\n          alignItems: \"center\",\r\n          // justifyContent: \"center\"\r\n          padding: 5,\r\n          marginBottom: 10\r\n        }}\r\n      >\r\n        <img\r\n          src=\"./images/google-icon.png\"\r\n          alt=\"google icon\"\r\n          style={{ width: 40 }}\r\n        />\r\n        <Typography\r\n          component=\"h1\"\r\n          style={{\r\n            fontSize: \"20px\",\r\n            textTransform: \"uppercase\",\r\n            marginLeft: 72\r\n          }}\r\n        >\r\n          Sign In with Google\r\n        </Typography>\r\n      </div>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default GoogleBtn;\r\n","import axios from \"axios\";\r\n\r\nimport * as key from \"../config/key\";\r\nimport * as actions from \"../actions/user\";\r\n\r\nconst userLogin = (userData, props) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const res = await axios.post(`/api/user/signin`, {\r\n        ...userData,\r\n      });\r\n      console.log(\"response\", res);\r\n      console.log(\"state\", getState);\r\n      await dispatch({ type: actions.USER_LOGIN, payload: res.data.user });\r\n      localStorage.setItem(\"token\", res.data.user.token);\r\n      props.history.push(\"/\");\r\n    } catch (error) {\r\n      const data = error.response.data;\r\n      console.log(data);\r\n\r\n      if (data == \"Unauthorized\") {\r\n        dispatch({\r\n          type: actions.USER_ERROR,\r\n          payload: { error: \"Email and Password is incorrect\" },\r\n        });\r\n      } else {\r\n        dispatch({ type: actions.USER_ERROR, payload: data });\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nconst userSignUp = (userData) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const res = await axios.post(`/api/user/signup`, {\r\n        ...userData,\r\n      });\r\n      console.log(\"signup response\", res);\r\n    } catch (error) {\r\n      //   const data = error.response.data;\r\n      //   console.log(error);\r\n      //   if (data.errorMsg.code) {\r\n      //     data.errorMsg = { msg: \"Please check your internet connection\" };\r\n      //   }\r\n      //   console.log(\"error data\", data);\r\n      //   Object.keys(data.errorMsg).forEach(key =>\r\n      //     console.log(data.errorMsg[key])\r\n      //   );\r\n      //   dispatch({ type: actions.USER_ERROR, payload: data });\r\n    }\r\n  };\r\n};\r\n\r\nconst getUser = (data) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const res = await axios.post(`/api/user/secret`, {\r\n        token: data,\r\n      });\r\n      console.log(\"secret response \", res);\r\n      await dispatch({\r\n        type: actions.USER_LOGIN,\r\n        payload: { ...res.data.user, token: localStorage.getItem(\"token\") },\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport { userLogin, userSignUp, getUser };\r\n\r\n//  it si rnning 100% correct and runs well\r\n//  recording by OBS Studio lets check this out\r\n","import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport GoogleBtn from \"../components/GoogleBtn\";\r\nimport * as auth from \"../api/user.api\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"user@example.com\",\r\n    password: \"1234567\",\r\n  });\r\n\r\n  function handleChange(e) {\r\n    console.log(e.target.value, e.target.name);\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    console.log(\"runs\");\r\n    console.log(user.email, user.password);\r\n\r\n    await props.userLogin(\r\n      { email: user.email, password: user.password },\r\n      props\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <GoogleBtn />\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        fullWidth\r\n        value={user.email}\r\n        className={classes.textField}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        fullWidth\r\n        value={user.password}\r\n        className={classes.textField}\r\n        onChange={handleChange}\r\n      />\r\n      {props.user.error\r\n        ? Object.keys(props.user.errorMsg).map((v) => (\r\n          <p key={v}> {props.user.errorMsg[v]}</p>\r\n        ))\r\n        : \"\"}\r\n      <p> Don't put you personal information like email , name in any case . Thank you ! </p>\r\n      <Button\r\n        type=\"button\"\r\n        onClick={handleSubmit}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        Login{\" \"}\r\n      </Button>\r\n      <Link\r\n        to=\"/register\"\r\n        style={{\r\n          color: \"blue\",\r\n          // textDecoration: \"none\",\r\n          fontSize: \"13px\",\r\n          float: \"right\",\r\n          marginTop: \"25px\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        Create New Account{\" \"}\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 10,\r\n    width: 500,\r\n  },\r\n  textField: {\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: { ...state.user },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, auth)(Login);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport GoogleBtn from \"../components/GoogleBtn\";\r\nimport * as auth from \"../api/user.api\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  function handleChange(e) {\r\n    console.log(e.target.value, e.target.name);\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  async function handleSubmit() {\r\n    console.log(\"runs signup\");\r\n    console.log(user.email, user.password);\r\n\r\n    await props.userSignUp(user);\r\n    props.history.push(\"/login\")\r\n  }\r\n\r\n  return (\r\n    <Container className={classes.root}>\r\n      <GoogleBtn />\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"Name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        fullWidth\r\n        className={classes.textField}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        type=\"text\"\r\n        fullWidth\r\n        className={classes.textField}\r\n        onChange={handleChange}\r\n      />\r\n      <TextField\r\n        variant=\"filled\"\r\n        label=\"password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        fullWidth\r\n        className={classes.textField}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      {props.user.error && (\r\n        <ul>\r\n          {Object.keys(props.user.errorMsg).map(key => (\r\n            <li key={key}>{props.user.errorMsg[key]}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      <Button\r\n        type=\"button\"\r\n        onClick={handleSubmit}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n      >\r\n        SignUp{\" \"}\r\n      </Button>\r\n\r\n      <Link\r\n        to=\"/login\"\r\n        style={{\r\n          color: \"blue\",\r\n          // textDecoration: \"none\",\r\n          fontSize: \"13px\",\r\n          float: \"right\",\r\n          marginTop: \"25px\"\r\n        }}\r\n      >\r\n        Already have an account\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: 10,\r\n    width: 500\r\n  },\r\n  textField: {\r\n    marginBottom: 10\r\n  }\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    user: { ...state.user }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, auth)(Login);\r\n","import axios from \"axios\";\r\n\r\nimport * as actions from \"../actions/post\";\r\n\r\n\r\nconst createPost = (postData, props) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            console.log(postData)\r\n            const res = await axios.post(\"/api/post/create\", postData, {\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                    \"authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            })\r\n            console.log(res)\r\n            await dispatch({ type: actions.CREATE_POST, payload: res.data.data })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n};\r\n\r\nconst getAllPosts = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(\"/api/post/posts\", {\r\n                headers: {\r\n                    \"authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                }\r\n            })\r\n            console.log(res)\r\n\r\n            await dispatch({ type: actions.GET_POSTS, payload: res.data.data })\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport { createPost, getAllPosts }","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem(\"token\");\r\n    props.history.push(\"/login\");\r\n  }\r\n  console.log(\"navbar props\", props);\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          {user.user.name}\r\n        </Typography>\r\n        <Button color=\"inherit\" component={Link} to=\"post/create\">\r\n          +\r\n        </Button>\r\n        <Button color=\"inherit\" onClick={handleLogout}>\r\n          Logout\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n        minWidth: 300,\r\n        marginTop: 10,\r\n        maxHeight: 400\r\n    },\r\n    media: {\r\n        maxHeight: 140,\r\n        minHeight: 140\r\n    },\r\n    postContainer: {\r\n        height: 200,\r\n        overflow: 'scroll',\r\n        '&::-webkit-scrollbar': {\r\n            display: 'none '\r\n        }\r\n    }\r\n});\r\n\r\n\r\nfunction Post(props) {\r\n    const classes = useStyles();\r\n    console.log(props)\r\n    return (\r\n        <Card className={classes.root}>\r\n\r\n\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {props.title}\r\n                </Typography>\r\n\r\n\r\n            </CardContent>\r\n            <div className={classes.postContainer}>\r\n\r\n\r\n                <div dangerouslySetInnerHTML={{ __html: props.body }} ></div>\r\n            </div>\r\n            <CardActions>\r\n                <Button size=\"small\" color=\"primary\" component={Link} to={`/post/:${props.id}`}>\r\n                    open\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Post; ","import React, { useEffect } from \"react\";\r\nimport \"./welcome.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../api/post.api\";\r\n\r\nimport Navbar from \"../components/Navbar\";\r\nimport Post from \"../components/Post\";\r\n\r\nfunction Welcome(props) {\r\n\r\n  useEffect(() => {\r\n\r\n    async function fetchingPosts() {\r\n      await props.getAllPosts();\r\n    }\r\n\r\n    fetchingPosts();\r\n  }, [])\r\n  if (!props.user.user) return <p> loading ...</p>;\r\n  const { posts } = props;\r\n  console.log(\"welcome props\", props);\r\n  return (\r\n    <>\r\n      <Navbar {...props}></Navbar>\r\n      <div className=\"post-container\">\r\n        {\r\n          posts.posts.length > 0 ? posts.posts.map((p) => (\r\n            <Post key={p._id} id={p._id} title={p.title} body={p.body} createdAt={p.createdAt} />\r\n          )) : <p>There is not any post found </p>\r\n        }\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: { ...state.user },\r\n    posts: { ...state.post }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(Welcome);\r\n","import React from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nfunction EmailVerification() {\r\n  return <Container>hello world</Container>;\r\n}\r\n\r\nexport default EmailVerification;\r\n","import React from \"react\";\r\n\r\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\r\nimport VideoCallIcon from \"@material-ui/icons/VideoCall\";\r\nimport AttachmentIcon from \"@material-ui/icons/Attachment\";\r\n\r\nconst CustomToolbar = () => (\r\n  <div className=\"toolbar\">\r\n    <div id=\"toolbar\">\r\n      <select\r\n        className=\"ql-header\"\r\n        defaultValue={\"\"}\r\n        onChange={(e) => e.persist()}\r\n      >\r\n        <option value=\"1\" />\r\n        <option value=\"2\" />\r\n        <option value=\"\" />\r\n      </select>\r\n      <button className=\"ql-bold\" />\r\n      <button className=\"ql-italic\" />\r\n      <button className=\"ql-underline\" />\r\n      <button className=\"ql-strike\" />\r\n      <button className=\"ql-insertImage\">\r\n        <CameraAltIcon />\r\n      </button>\r\n      <button className=\"ql-insertVideo\">\r\n        <VideoCallIcon />\r\n      </button>\r\n      <button className=\"ql-insertFile\">\r\n        <AttachmentIcon />\r\n      </button>\r\n      <button className=\"ql-link\" />\r\n      <button className=\"ql-code-block\" />\r\n      <button className=\"ql-video\" />\r\n      <button className=\"ql-blockquote\" />\r\n      <button className=\"ql-clean\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CustomToolbar;\r\n","import { Quill } from \"react-quill\";\r\n\r\nconst BlockEmbed = Quill.import(\"blots/block/embed\");\r\n\r\n/*\r\n  SECTION Image Blot start  \r\n*/\r\n\r\nclass ImageBlot extends BlockEmbed {\r\n  static create(value) {\r\n    let node = super.create();\r\n\r\n    node.style.width = \"100%\";\r\n    node.setAttribute(\"contenteditable\", false);\r\n    // node.style.backgroundColor = \"blue\";\r\n    node.style.margin = \"0px auto\";\r\n\r\n    let imageTag = document.createElement(\"img\");\r\n\r\n    imageTag.setAttribute(\"src\", value.src);\r\n    imageTag.setAttribute(\"alt\", value.alt);\r\n    imageTag.style.width = \"100%\";\r\n    imageTag.style.margin = \"0px auto !important\";\r\n    node.append(imageTag);\r\n\r\n    return node;\r\n  }\r\n\r\n  static value(node) {\r\n    return {\r\n      alt: node.getAttribute(\"alt\"),\r\n      src: node.getAttribute(\"src\"),\r\n    };\r\n  }\r\n}\r\n\r\nImageBlot.blotName = \"image\";\r\nImageBlot.tagName = \"div\";\r\n\r\nQuill.register(ImageBlot);\r\n/*\r\n    Image Blot end\r\n  */\r\n","import { Quill } from \"react-quill\";\r\n\r\nconst BlockEmbed = Quill.import(\"blots/block/embed\");\r\n\r\nclass VideoBlot extends BlockEmbed {\r\n  static create(value) {\r\n    if (value && value.src) {\r\n      const node = super.create();\r\n      node.style.width = \"100%\";\r\n\r\n      const videoTag = document.createElement(\"video\");\r\n      videoTag.setAttribute(\"src\", value.src);\r\n      videoTag.setAttribute(\"title\", value.title);\r\n      videoTag.setAttribute(\"width\", \"100%\");\r\n      videoTag.setAttribute(\"controls\", \"\");\r\n\r\n      node.append(videoTag);\r\n      return node;\r\n    }\r\n  }\r\n\r\n  static value(node) {\r\n    node.onPlay = () => console.log(\"i played\");\r\n    if (node.getAttribute(\"title\")) {\r\n      return {\r\n        src: node.getAttribute(\"src\"),\r\n        title: node.getAttribute(\"title\"),\r\n      };\r\n    } else {\r\n      return node.getAttribute(\"src\");\r\n    }\r\n    // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n  }\r\n}\r\n\r\nVideoBlot.blotName = \"video\";\r\nVideoBlot.tagName = \"div\";\r\nQuill.register(VideoBlot);\r\n","import { Quill } from \"react-quill\";\r\n\r\nconst BlockEmbed = Quill.import(\"blots/block/embed\");\r\n\r\nclass FileBlot extends BlockEmbed {\r\n  static create(value) {\r\n    const node = super.create();\r\n    node.setAttribute(\"class\", \"file\");\r\n    const p = document.createElement(\"p\");\r\n    p.innerText = value.title;\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\"href\", value.url);\r\n    a.innerText = \"download\";\r\n\r\n    node.style.cursor = \"pointer\";\r\n\r\n    node.append(p);\r\n    node.append(a);\r\n\r\n    return node;\r\n  }\r\n\r\n  static value(node) {\r\n    const linkTag = node.querySelector(\"a\");\r\n    return linkTag.getAttribute(\"href\");\r\n  }\r\n}\r\n\r\nFileBlot.blotName = \"file\";\r\nFileBlot.tagName = \"div\";\r\nFileBlot.className = \"file\";\r\nQuill.register(FileBlot);\r\n","import React, { useState } from \"react\";\r\nimport hljs from 'highlight.js/lib/core';\r\nimport 'highlight.js/styles/github.css';\r\n\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"./editor.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nimport CustomToolbar from \"./CustomToolbar\";\r\nimport \"./ImageBlot\";\r\nimport \"./VideoBlot\";\r\nimport \"./FileBlot\";\r\n\r\nvar FontAttributor = Quill.import(\"attributors/class/font\");\r\nFontAttributor.whitelist = [\r\n  \"sofia\",\r\n  \"slabo\",\r\n  \"roboto\",\r\n  \"inconsolata\",\r\n  \"ubuntu\",\r\n  \"Jost\",\r\n];\r\nQuill.register(FontAttributor, true);\r\n\r\n/*\r\n SECTION:  Clipboard  start \r\n*/\r\n\r\nconst QuillClipboard = Quill.import(\"modules/clipboard\");\r\n\r\n// class Clipboard extends QuillClipboard {\r\n//   getMetaTagElements = (stringValue) => {\r\n//     const el = document.createElement(\"div\");\r\n//     el.innerHTML = stringValue;\r\n//     console.log(el);\r\n//     return el.getElementsByTagName(\"meta\");\r\n//   };\r\n\r\n//   async onPaste(e) {\r\n//     let clipboardData = e.clipboardData;\r\n//     let pastedData = await clipboardData.getData(\"Text\");\r\n\r\n//     const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\r\n//     if (urlMatches.length > 0) {\r\n//       e.preventDefault();\r\n//       urlMatches.forEach(link => {\r\n//         axios.get(link)\r\n//           .then(payload => {\r\n//             // let title, image, url, description;\r\n//             let title, image, url;\r\n//             for (let node of this.getMetaTagElements(payload)) {\r\n//               if (node.getAttribute(\"property\") === \"og:title\") {\r\n//                 title = node.getAttribute(\"content\");\r\n//               }\r\n//               if (node.getAttribute(\"property\") === \"og:image\") {\r\n//                 image = node.getAttribute(\"content\");\r\n//               }\r\n//               if (node.getAttribute(\"property\") === \"og:url\") {\r\n//                 url = node.getAttribute(\"content\");\r\n//               }\r\n//               // if (node.getAttribute(\"property\") === \"og:description\") {\r\n//               //     description = node.getAttribute(\"content\");\r\n//               // }\r\n//             }\r\n\r\n//             const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\r\n\r\n//             let range = this.quill.getSelection();\r\n//             let position = range ? range.index : 0;\r\n//             this.quill.pasteHTML(position, rendered, 'silent');\r\n//             this.quill.setSelection(position + rendered.length);\r\n//           })\r\n//           .catch(error => console.error(error));\r\n//       });\r\n\r\n//     } else {\r\n//       super.onPaste(e);\r\n//     }\r\n//   }\r\n\r\n\r\n// }\r\n\r\n// Quill.register(\"modules/clipboard\", Clipboard, true);\r\n\r\n/*\r\n  Clipboard end  \r\n*/\r\n\r\nclass QuillEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.quillRef = null;\r\n    this.reactQuillRef = null;\r\n    this.state = { editorHtml: \"\" };\r\n    this.imageRef = React.createRef();\r\n    this.videoRef = React.createRef();\r\n    this.fileRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.attachQuillRefs();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.attachQuillRefs();\r\n  }\r\n\r\n  attachQuillRefs = () => {\r\n    if (typeof this.reactQuillRef.getEditor !== \"function\") return;\r\n    this.quillRef = this.reactQuillRef.getEditor();\r\n  };\r\n\r\n  //  SECTION DEFINED METHODS\r\n\r\n  uploadFiles = async (data) => {\r\n    const opt = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"token\"),\r\n      },\r\n    };\r\n\r\n    return await axios.post(\"/api/post/uploadFiles\", data, {\r\n      ...opt,\r\n    });\r\n  };\r\n\r\n  handleChange = (html) => {\r\n    this.setState({ editorHtml: html }, () => {\r\n      this.props.onEditorStateChange(this.state.editorHtml)\r\n    });\r\n\r\n  };\r\n\r\n  imageHandler = () => {\r\n    this.imageRef.current.click();\r\n  };\r\n\r\n  videoHandler = () => {\r\n    this.videoRef.current.click();\r\n  };\r\n\r\n  fileHandler = () => {\r\n    this.fileRef.current.click();\r\n  };\r\n\r\n  insertImage = async (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (\r\n      e.currentTarget &&\r\n      e.currentTarget.files &&\r\n      e.currentTarget.files.length > 0\r\n    ) {\r\n      const value = e.currentTarget.files[0];\r\n      console.log(value);\r\n      let formData = new FormData();\r\n      formData.append(\"file\", value);\r\n\r\n      // posting file from AXIOS\r\n      const res = await this.uploadFiles(formData);\r\n      if (res) {\r\n        const quill = this.reactQuillRef.getEditor();\r\n\r\n        quill.focus();\r\n\r\n        let range = quill.getSelection();\r\n        let position = range.index;\r\n        quill.insertEmbed(position, \"image\", {\r\n          src: res.data.data.url,\r\n          alt: res.data.data.name,\r\n        });\r\n\r\n        quill.setSelection(position + 1);\r\n      }\r\n      this.imageRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  insertVideo = async (e) => {\r\n    console.log(e.currentTarget.files[0]);\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (\r\n      e.currentTarget &&\r\n      e.currentTarget.files &&\r\n      e.currentTarget.files.length > 0\r\n    ) {\r\n      const value = e.currentTarget.files[0];\r\n      console.log(value);\r\n      let formData = new FormData();\r\n      formData.append(\"file\", value);\r\n\r\n      // posting file from AXIOS\r\n      const res = await this.uploadFiles(formData);\r\n      if (res) {\r\n        const quill = this.reactQuillRef.getEditor();\r\n        console.log(res);\r\n        quill.focus();\r\n\r\n        let range = quill.getSelection();\r\n        let position = range.index;\r\n        quill.insertEmbed(position, \"video\", {\r\n          src: res.data.data.url,\r\n          title: res.data.data.name,\r\n        });\r\n\r\n        quill.setSelection(position + 1);\r\n      }\r\n\r\n\r\n\r\n      this.videoRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  insertFile = async (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    console.log(e.currentTarget.files[0]);\r\n    if (\r\n      e.currentTarget &&\r\n      e.currentTarget.files &&\r\n      e.currentTarget.files.length > 0\r\n    ) {\r\n      const value = e.currentTarget.files[0];\r\n      console.log(value);\r\n      let formData = new FormData();\r\n      formData.append(\"file\", value);\r\n\r\n      // posting file from AXIOS\r\n      const res = await this.uploadFiles(formData);\r\n\r\n      if (res) {\r\n\r\n        const quill = this.reactQuillRef.getEditor();\r\n        console.log(res);\r\n        quill.focus();\r\n\r\n        let range = quill.getSelection();\r\n        let position = range.index;\r\n        quill.insertEmbed(position, \"file\", {\r\n          url: res.data.data.url,\r\n          title: res.data.data.name,\r\n        });\r\n\r\n        quill.setSelection(position + 1);\r\n\r\n      }\r\n\r\n      this.fileRef.current.value = null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-editor\">\r\n        <CustomToolbar />\r\n        <ReactQuill\r\n          ref={(el) => {\r\n            this.reactQuillRef = el;\r\n          }}\r\n          placeholder=\"Start Writing\"\r\n          theme={\"snow\"}\r\n          onChange={this.handleChange}\r\n          modules={this.modules}\r\n          formats={this.formats}\r\n          value={this.state.editorHtml}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          ref={this.imageRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.insertImage}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"video/*\"\r\n          ref={this.videoRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.insertVideo}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          accept=\"*\"\r\n          ref={this.fileRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={this.insertFile}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  modules = {\r\n    // syntax: true,\r\n    toolbar: {\r\n      container: \"#toolbar\",\r\n      handlers: {\r\n        insertImage: this.imageHandler,\r\n        insertVideo: this.videoHandler,\r\n        insertFile: this.fileHandler,\r\n      },\r\n    },\r\n  };\r\n\r\n  formats = [\r\n    \"header\",\r\n    \"bold\",\r\n    \"italic\",\r\n    \"underline\",\r\n    \"strike\",\r\n    \"image\",\r\n    \"video\",\r\n    \"file\",\r\n    \"link\",\r\n    \"code-block\",\r\n    \"video\",\r\n    \"blockquote\",\r\n    \"clean\",\r\n  ];\r\n}\r\n\r\nconsole.log(\"handler\", QuillEditor.imageHandler);\r\n\r\nexport default QuillEditor;\r\n","import React from \"react\";\r\n\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <AppBar position=\"fixed\">\r\n            <Toolbar>\r\n                <Button color=\"inherit\" component={Link} to={props.path}>\r\n                    goBack\r\n        </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport QuillEditor from \"../components/Editor/Editor\";\r\nimport SimpleNavbar from \"../components/SimpleNavbar\"\r\nimport * as postActions from \"../api/post.api\";\r\n\r\n\r\n\r\n\r\n\r\nfunction CreateNote(props) {\r\n  const [editorState, setEditorState] = useState();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"handle Submit called\");\r\n    const res = await props.createPost({ writer: props.user.user.id, title: \"hello world\", body: editorState })\r\n    console.log(\"postCreated\", res)\r\n    setOpen(true);\r\n    setTimeout(() => props.history.push(\"/\"), 2000)\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const onEditorStateChange = (d) => {\r\n    console.log(\"editor state change\", d)\r\n    setEditorState(d)\r\n  }\r\n\r\n  const onEditorFilesChange = () => {\r\n    console.log(\"editor files change\")\r\n  }\r\n\r\n  console.log(\"writer\", props.user)\r\n\r\n  return (\r\n\r\n    <>\r\n      <SimpleNavbar path=\"/\" />\r\n      <div\r\n        style={{\r\n          width: \"60%\",\r\n          margin: \"100px auto\",\r\n          borderRadius: \"40px\",\r\n        }}\r\n      >\r\n        <QuillEditor\r\n          onEditorFilesChange={onEditorFilesChange}\r\n          onEditorStateChange={onEditorStateChange}\r\n        />\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleSubmit}\r\n        >\r\n          {\" \"}\r\n        Submit{\" \"}\r\n        </Button>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose} message=\"Post has created Successfully \" variant=\"success\" />\r\n\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: { ...state.user }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, postActions)(CreateNote)\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport axios from \"axios\";\r\n\r\nimport SimpleNavbar from \"../components/SimpleNavbar\";\r\n\r\nexport default function SinglePost(props) {\r\n\r\n    const [content, setContent] = useState(null);\r\n    const postId = props.match.params.postId.split(\":\")[1];\r\n    console.log(postId)\r\n\r\n    useEffect(() => {\r\n        async function fetchSinglePost() {\r\n            try {\r\n                console.log(\"called\")\r\n                const res = await axios.post(`/api/post/singlePost/`, { postId },\r\n                    {\r\n                        headers: {\r\n                            \"content-type\": \"application/json\",\r\n                            \"authorization\": \"Bearer \" + localStorage.getItem(\"token\")\r\n                        }\r\n                    })\r\n\r\n                if (res) {\r\n                    setContent(res.data.data)\r\n                    console.log(res\r\n                    )\r\n                }\r\n            } catch (err) {\r\n                console.log({ err })\r\n            }\r\n\r\n        }\r\n\r\n        fetchSinglePost();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <SimpleNavbar path=\"/\" />\r\n            <div style={{ width: \"70%\", margin: \"0px auto\", marginTop: 100 }}>\r\n                {content ? <div dangerouslySetInnerHTML={{ __html: content.body }} ></div> : <p>Loading ... </p>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as userAuth from \"../../api/user.api\";\r\n\r\nconst auth = (OriginalComponent) => {\r\n  return connect((state) => {\r\n    return {\r\n      user: { ...state.user },\r\n    };\r\n  }, userAuth)(function (props) {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        try {\r\n          await props.getUser(token);\r\n        } catch (error) {\r\n          props.history.push(\"/login\");\r\n        }\r\n      }\r\n      fetchData();\r\n    }, []);\r\n\r\n    if (!token) return <Redirect to=\"/login\" />;\r\n    return <OriginalComponent {...props} />;\r\n  });\r\n};\r\n\r\nexport default auth;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Welcome from \"./pages/Welcome\";\r\nimport EmailVerification from \"./pages/EmailVerification\";\r\nimport CreateNote from \"./pages/CreateNote\";\r\nimport SinglePost from \"./pages/SinglePost\"\r\n\r\nimport auth from \"./components/HOCs/Auth\";\r\n\r\nexport default function BloggerApp() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact={true} path=\"/login\" component={Login} />\r\n        <Route exact={true} path=\"/register\" component={Signup} />\r\n        <Route exact={true} path=\"/\" component={auth(Welcome)} />\r\n        <Route\r\n          exact={true}\r\n          path=\"/emailVerification/:id\"\r\n          component={EmailVerification}\r\n        />\r\n        <Route exact={true} path=\"/post/create\" component={auth(CreateNote)} />\r\n        <Route exact={true} path=\"/post/:postId\" component={auth(SinglePost)} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\nimport BloggerApp from \"./BloggerApp\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <BloggerApp />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}